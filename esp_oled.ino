#include <ESP8266WiFi.h>
#include <WiFiUdp.h>
#include "DHT.h"
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define DHTPIN 16     // what digital pin the DHT22 is conected to
#define DHTTYPE DHT11 // there are multiple kinds of DHT sensors

const unsigned char PROGMEM logo [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x06, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00,
0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x38, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00,
0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x38, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x00,
0x00, 0x01, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x00,
0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC0, 0x00,
0x00, 0x01, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xC0, 0x00,
0x00, 0x01, 0xFC, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x1F, 0xC0, 0x00,
0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x7F, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0x80, 0x00, 0x00, 0x07, 0xFE, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0x80, 0x00, 0x00, 0x0F, 0xFE, 0x3F, 0xF0, 0x00, 0x00, 0x01, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xC0, 0x00, 0x00, 0x1F, 0xFE, 0x3F, 0xF8, 0x00, 0x00, 0x03, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xE0, 0x00, 0x00, 0x1F, 0xFE, 0x3F, 0xFC, 0x00, 0x00, 0x03, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xF0, 0x00, 0x00, 0x3F, 0xFE, 0x3F, 0xFE, 0x00, 0x00, 0x07, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xF8, 0x00, 0x00, 0x7F, 0xFE, 0x3F, 0xFF, 0x00, 0x00, 0x0F, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xFC, 0x00, 0x00, 0xFF, 0xFE, 0x3F, 0xFF, 0x80, 0x00, 0x1F, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xFE, 0x00, 0x01, 0xFF, 0xFE, 0x3F, 0xFF, 0xC0, 0x00, 0x3F, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xFF, 0x00, 0x03, 0xFF, 0xFE, 0x3F, 0xFF, 0xE0, 0x00, 0x7F, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xFF, 0x00, 0x07, 0xFF, 0xFE, 0x3F, 0xFF, 0xE0, 0x00, 0xFF, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xFF, 0x80, 0x0F, 0xFF, 0xFE, 0x3F, 0xFF, 0xF0, 0x01, 0xFF, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xFF, 0xC0, 0x0F, 0xFF, 0xFE, 0x3F, 0xFF, 0xF8, 0x01, 0xFF, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xFF, 0xE0, 0x1F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFC, 0x03, 0xFF, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x07, 0xFF, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xFF, 0xF8, 0x7F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xFF, 0xFC, 0xFF, 0xFF, 0xFE, 0x3F, 0xFF, 0xFF, 0x9F, 0xFF, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xF3, 0xFF, 0xFF, 0x3F, 0xFE, 0x3F, 0xFE, 0x7F, 0xFF, 0xE7, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xF3, 0xFF, 0xFF, 0x3F, 0xFE, 0x3F, 0xFE, 0x7F, 0xFF, 0xE7, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xF1, 0xFF, 0xFE, 0x3F, 0xFE, 0x3F, 0xFE, 0x3F, 0xFF, 0xC7, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xF0, 0xFF, 0xFC, 0x3F, 0xFE, 0x3F, 0xFE, 0x1F, 0xFF, 0x87, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xF0, 0xFF, 0xF8, 0x3F, 0xFE, 0x3F, 0xFE, 0x1F, 0xFF, 0x07, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xF0, 0x7F, 0xF8, 0x3F, 0xFE, 0x3F, 0xFE, 0x0F, 0xFF, 0x07, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xF0, 0x3F, 0xF0, 0x3F, 0xFE, 0x3F, 0xFE, 0x07, 0xFE, 0x07, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xF0, 0x1F, 0xE0, 0x3F, 0xFE, 0x3F, 0xFE, 0x03, 0xFC, 0x07, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xF0, 0x1F, 0xC0, 0x3F, 0xFE, 0x3F, 0xFE, 0x03, 0xF8, 0x07, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xF0, 0x0F, 0xC0, 0x3F, 0xFE, 0x3F, 0xFE, 0x01, 0xF8, 0x07, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xF0, 0x07, 0x80, 0x3F, 0xFE, 0x3F, 0xFE, 0x00, 0xF0, 0x07, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xF0, 0x03, 0x00, 0x3F, 0xFE, 0x3F, 0xFE, 0x00, 0x60, 0x07, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xF0, 0x02, 0x00, 0x3F, 0xFE, 0x3F, 0xFE, 0x00, 0x40, 0x07, 0xFF, 0xC0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

#define OLED_RESET LED_BUILTIN  //4
Adafruit_SSD1306 display(OLED_RESET);

#if (SSD1306_LCDHEIGHT != 64)
#error("Height incorrect, please fix Adafruit_SSD1306.h!");
#endif

DHT dht(DHTPIN, DHTTYPE);
const char* ssid = "***";
const char* password = "***";
int timeSinceLastRead = 0;
WiFiClient espClient;

void setup_wifi() {
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0,30);
  display.println("Mikro Maker Youtube");
  display.println("ESP8266 OLED EXAMPLE");
  display.display();
  delay(10);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    Serial.println("while");
    delay(500);
  }
   // Clear the buffer.
  Serial.println("Debug");
  display.println("WiFi connected");
  display.display(); 
    
}
void read_temp() {
     
    // Report every 2 seconds.
    if(timeSinceLastRead > 2000) {
      // Reading temperature or humidity takes about 250 milliseconds!
      // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor)
      int h = dht.readHumidity();
      // Read temperature as Celsius (the default)
      int t = dht.readTemperature();
      // Read temperature as Fahrenheit (isFahrenheit = true)
      int f = dht.readTemperature(true);
  
      // Check if any reads failed and exit early (to try again).
      if (isnan(h) || isnan(t) || isnan(f)) {
        Serial.println("Failed to read from DHT sensor!");
        timeSinceLastRead = 0;
        return;
      }
      display.clearDisplay();
      display.setTextSize(2);
      display.setTextColor(WHITE);
      display.setCursor(0,16);
      display.print(t);
      display.print((char)247);
      display.print("C");
     
      display.setCursor(64,16);
      display.print("%");
      display.println(h);
      display.display(); 
  
      timeSinceLastRead = 0;
    }
    delay(100);
    timeSinceLastRead += 100;

}

void setup() {
   display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
   display.clearDisplay();
   display.drawBitmap(0,0,logo,128,64,1);
   display.display(); 
   delay(3000);

   setup_wifi();

  
}

void loop() {
  read_temp();
  // put your main code here, to run repeatedly:

}
